
let a := 002;

fn sayHello(a: str){
    let hello := "Hello world " + a;
}


//ret 0; //error

let someBool := a > 5;

fn large(u: int) -> int {
    let a := 1;
    let b := 2;
    if a > b {
        ret 5;
    } els {
        //ret b;
        if a > b {
            ret 5;
        } els {
            ret 6;
        }
    }
    //ret 0;
}


let b := 3;
b = large(6);

const f := fn () -> int {
    ret 5;
};

let c := f();

type Int int;

let typedInt: Int = 5;

type FN fn (a: int, b: fl) -> int;

fn testFn(param1: int, param2: FN) -> int {
    ret param2(param1, 5.0);
}

testFn(4, fn (a: int, b: fl) -> int {
    ret a + 5;
});

fn testFn2(param1: int, param2: fn (a: int, b: fl) -> int) -> int {
    ret param2(param1, 5.0);
}

testFn2(4, fn (a: int, b: fl) -> int {
    ret a + 5;
});