
type ID struct {
    priv id: int
};

type Point struct{
    priv x: int,
    y: int,
};

let point : Point;

point = @Point{ x: 13, y: 23 };

//point.id;

type Distance struct {
    start: Point,
    end: Point,
    priv max: int,
    min: int,
};

let a := 0;

let distance := @Distance{
    start: @Point{
        x: 2,
        y: 3,
    },
    end: point,
    max: 10,
    min: 0,
};

//let a := distance; // error

//distance.max = 9; // error - private prop
distance.min = 1;
impl Distance {
    fn get_max() -> int {
        print("Max: ", this.max);
        ret this.max; // check how 'this' is not giving error
    }
}

let max := distance.get_max();

/*

trait Drawable {
    fn draw();
    fn update();
}

impl Drawable for Point {
    fn draw() {
        //print("Point: x: ", this.x, ", y: ", this.y);
    }
}

impl Drawable for Distance {
    fn draw() {
        //print("Distance: start: ");
        this.start.draw();
        //print(", end: ");
        this.end.draw();
        //print(", max: ", this.max, ", min: ", this.min);
    }
}
*/